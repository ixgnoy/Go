package main

import "fmt"

func main() {
	// Panic is a built-in function that stops the ordinary flow of control and begins panicking.
	// Use `panic` for truly unrecoverable errors where the program cannot continue to run safely.
	// But it's used rarely in production code.
	// Becasue the standard way to handle expected failures (like invalid user input or a file not being found) is to return an error.
	//
	// Format: panic(interface{})

	// Process of a valid input
	process(5)
	// Process of an invalid input
	process(-19)

}

func process(input int) {
	defer fmt.Println("Deferred 1")
	defer fmt.Println("Deferred 2")
	if input < 0 {
		fmt.Println("Before Panic")
		panic("input must be non-negative")
		// fmt.Println("After Panic") // After panic, starting with this statement won't reached by the prorgam.
		// defer fmt.Println("This will not be executed")
	}
	fmt.Println("Processing input:", input)

}
