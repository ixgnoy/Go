package main

import "fmt"

func main() {
	// fmt.Print("Hello ")
	// fmt.Print("World!")
	// fmt.Print(12, 456)

	// fmt.Println("Hello ")
	// fmt.Println("World!")
	// fmt.Println(12, 456)

	// name := "Ray"
	// age := 22
	// fmt.Printf("Hello %s, Age: %d\n", name, age)
	// fmt.Printf("Binary: %b, Hexadecimal: %X, Octal:%o\n", age, age, age)

	// // Formattting functions
	// // Sprint - formats and returns a string without point to next line
	// // Sprintln - formats and returns a string with point to next line
	// // Sprintf - formats and returns a string with specified format
	// s := fmt.Sprint("Hello", "World!", 12, 456)
	// fmt.Print(s)
	// s = fmt.Sprintln("Hello", "World!", 12, 456)
	// fmt.Print(s)
	// fmt.Print(s)
	// Note: ******
	// fmt.Sprint was Used for quick and simple string formatting, especially for logging or debugging mixed data types.
	//       ******

	// sf := fmt.Sprintf("Hello %s, Age: %d", name, age)
	// fmt.Print(sf)
	// fmt.Print(sf)



	// Scanning functions
	// Scan - reads input from standard input (stdin) and stores it in the provided variables
	// var name string
	// var age int
	// fmt.Print("Enter your name and age: ")
	// fmt.Scan(&name, &age)  // Use `&` to pass the address of the variables
	// fmt.Printf("Hello %s, Age: %d\n", name, age)

	// Scanln - reads input from standard input (stdin) and stores it in the provided variables, adding a newline at the end
	// Differences between Scan and Scanln:
	// Scanln stops reading input at the first newline character, while Scan continues until all provided variables are filled.
	// var name string
	// var age int
	// fmt.Print("Enter your name and age: ")
	// fmt.Scanln(&name, &age)  // Use `&` to pass the address of the variables
	// fmt.Printf("Hello %s, Age: %d\n", name, age)


	// Scanf - reads input from standard input (stdin) according to a specified format and stores it in the provided variables
	// var name string
	// var age int
	// fmt.Print("Enter your name and age: ")
	// fmt.Scanf("%s %d", &name, &age)  // Use `&` to pass the address of the variables
	// fmt.Printf("Hello %s, Age: %d\n", name, age)

	// Error Formatting Functions
	err := checkAge(25)
	if err != nil {
		fmt.Println("Error:", err)
	}
}
// Making a function to ehck age
func checkAge(age int) error {
	if age < 18 {
		return fmt.Errorf("Age %d is too young to drive.", age)
	}
	return nil
}

// Notes:
// Differences between Sprint and Print
// Prinat used to print to console, while Sprint used to return a string.